{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","NotefulErrors.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","newFolder","hasError","updateNewFolderName","target","value","body","JSON","stringify","newName","trim","_this2","NotefulForm_NotefulForm","onSubmit","htmlFor","touched","validateFolderName","aria-required","aria-label","required","defaultValue","onChange","updateFolderName","AddNote","addNewNote","Date","Content-Type","resJSON","handleAddNote","parseFolders","newNote","updateBadSubmitData","validateName","validateDescription","updateNewNoteData","NotefulErrors","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","App","setState","nameValue","contentValue","input","defineProperty","handleAddFolder","toConsumableArray","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","Route","path","component","exact","Provider","NotefulErrors_NotefulErrors","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.47ff99a1.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {},\r\n  })","export const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}","export default {\r\n    API_ENDPOINT: 'http://localhost:9090'\r\n  }","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types'\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    onDeleteNote: () => { },\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n      })\n      .then(() => {       \n        this.context.deleteNote(noteId)\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nNote.propTypes = {\n  onDeleteNote: PropTypes.func,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  modified: PropTypes.string.isRequired\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n                onDeleteNote={this.onDeleteNote}\n              />\n            </li>\n          )}\n        </ul>\n      </section>\n    )\n  }\n}\n\nNoteListMain.propTypes = {\n  match: PropTypes.object,\n  params: PropTypes.object\n}","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}","import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class AddFolder extends Component {\r\n    static defaultProps = {\r\n        history: {\r\n          push: () => { }\r\n        },\r\n      }\r\n      static contextType = ApiContext;\r\n\r\n      handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (this.context.newFolder.hasError === true){\r\n        return this.context.updateNewFolderName()\r\n        } else {\r\n        const folder = {\r\n          name: e.target['folder-name'].value\r\n        }\r\n        fetch(`${config.API_ENDPOINT}/folders`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify(folder),\r\n        })\r\n          .then(res => {\r\n            if (!res.ok)\r\n              return res.json().then(e => Promise.reject(e))\r\n            return res.json()\r\n          })\r\n          .then(folder => {\r\n            this.context.addFolder(folder)\r\n            this.props.history.push(`/folder/${folder.id}`)\r\n          })\r\n          .catch(error => {\r\n            console.error({ error })\r\n          })\r\n      }\r\n    }\r\n    \r\n\r\n  updateFolderName(e) {\r\n    const newName = e.target.value;\r\n      this.context.updateNewFolderName(newName);\r\n  }\r\n\r\n  validateFolderName() {\r\n    \r\n    if (this.context.newFolder.name.trim().length === 0) {\r\n      return 'Must be more than 0 characters.'\r\n    } else if ( this.context.newFolder.name.trim().length <= 3 ) {    \r\n      return 'Must be more than 3 characters.'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n        <section className='AddFolder'>\r\n        <h2>Create a folder</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='folder-name'>\r\n          Name:\r\n        {this.context.newFolder.touched && (\r\n          <p>{this.validateFolderName()}</p>\r\n          )}  \r\n        </label>\r\n        <input type='text' \r\n        id='new-folder'\r\n        name=\"folder-name\"\r\n        aria-required=\"true\"\r\n        aria-label=\"Name\"\r\n        required\r\n        defaultValue=\"\"\r\n        onChange={(e) => this.updateFolderName(e)}/>\r\n        <button type=\"submit\">Submit</button>\r\n        </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nAddFolder.propTypes = {\r\n  history: PropTypes.object\r\n}","import React from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\n\r\n\r\nexport default class AddNote extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => { }\r\n    },\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  addNewNote = note => {\r\n    note.modified = new Date(note.modified);\r\n\r\n    fetch(`${config.API_ENDPOINT}/notes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(note),\r\n    })\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(resJSON => this.context.handleAddNote(resJSON))\r\n  }\r\n  parseFolders = () => {\r\n    return this.context.folders.map(folder => (\r\n      <option key={folder.id} name={folder.id} value={folder.id}>\r\n        {folder.name}\r\n      </option>\r\n    ))\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault(e);\r\n    const newNote = {\r\n      name: e.target.name.value,\r\n      content: e.target.content.value,\r\n      folderId: e.target.folder.value,\r\n      modified: new Date(),\r\n    }\r\n    if (e.target.name.value.length !== 0 && e.target.content.value.length !== 0) {\r\n\r\n      this.addNewNote(newNote)\r\n      this.props.history.push('/');\r\n\r\n    } else {\r\n      return this.context.updateBadSubmitData()\r\n    }\r\n\r\n   \r\n\r\n  }\r\n\r\n  validateName = () => {\r\n    \r\n    if (this.context.newNote.name.value === undefined || this.context.newNote.name.value.length === 0) {\r\n      return 'Name is required'\r\n    }\r\n  }\r\n\r\n  validateDescription = () => {\r\n    if (this.context.newNote.content.value === undefined || this.context.newNote.content.value.length === 0) {\r\n      return 'Description is required'\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <section className='AddNote'>\r\n        <h2>Create a note</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='note-name'>\r\n              Name\r\n            {this.context.newNote.name.touched && <p>{this.validateName()}</p>}\r\n            </label>\r\n            <input type='text' id='note-name' name='name'\r\n              aria-required=\"true\"\r\n              aria-label=\"Name\"\r\n              required\r\n              defaultValue=\"\"\r\n              onChange={e =>\r\n                this.context.updateNewNoteData(e.target.name, e.target.value)\r\n              }\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor=\"content\">\r\n              Description\r\n            {this.context.newNote.content.touched && (\r\n                <p>{this.validateDescription()}</p>\r\n              )}\r\n            </label>\r\n            <textarea id='note-content' name='content'\r\n              aria-required=\"true\"\r\n              aria-label=\"Description\"\r\n              defaultValue=\"\"\r\n              required\r\n              onChange={e =>\r\n                this.context.updateNewNoteData(e.target.name, e.target.value)\r\n              }\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor=\"folder-select\">Select a Folder</label>\r\n            <select\r\n              id=\"note-folder\"\r\n              name=\"folder\"\r\n              aria-required=\"true\"\r\n              aria-label=\"Select a folder\"\r\n            >\r\n              {this.parseFolders()}\r\n            </select>\r\n          </div>\r\n          <div className='buttons'>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotefulErrors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {hasError:true};\r\n\r\n  }\r\n  render() {\r\n    if (this.state.hasError){\r\n      return(\r\n        <div>\r\n          <h2>ERROR</h2>\r\n          <p>Something wrong here!...</p>\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nNotefulErrors.propTypes = {\r\n  children: PropTypes.array\r\n}","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\nimport NotefulErrors from '../NotefulErrors'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n    newFolder: {\n      hasError: true,\n      touched: false,\n      name: '',\n    },\n    newNote: {\n      name: {\n        touched: false,\n        value: '',\n      },\n      folderId: {\n        touched: false,\n        value: '',\n      },\n      content: {\n        touched: false,\n        value: '',\n      },\n    },\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`),\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json()])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  updateNewFolderName = name => {\n    if (name === undefined) {\n      this.setState({\n        newFolder: {\n          hasError: true,\n          touched: true,\n          name: \"\",\n        },\n      })\n    } else if (name.length < 4) {\n      this.setState({\n        newFolder: {\n          hasError: true,\n          touched: true,\n          name: name,\n        },\n      })\n    } else {\n      this.setState({\n        newFolder: {\n          hasError: false,\n          touched: true,\n          name: name,\n        },\n      })\n    }\n  }\n\n  updateBadSubmitData = () => {\n    const nameValue = this.state.newNote.name.value\n    const contentValue = this.state.newNote.content.value\n    this.setState({\n      ...this.state.newNote,\n      newNote: {\n        name: {\n          touched: true,\n          value: nameValue\n        },\n        content: {\n          touched: true,\n          value: contentValue\n        }\n      }\n\n\n    })\n\n  }\n\n  updateNewNoteData = (input, value) => {\n    this.setState({\n      newNote: {\n        ...this.state.newNote,\n        [input]: {\n          touched: true,\n          value: value,\n        },\n      },\n    })\n  }\n\n  handleAddFolder = newFolder => {\n    this.setState({\n      folders: [...this.state.folders, newFolder],\n      newFolder: {\n        hasError: true,\n        touched: false,\n        name: \"\",\n      }\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note],\n      newNote: {\n        name: {\n          touched: false,\n        },\n        content: {\n          touched: false,\n        }\n      }\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId),\n    })\n\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        <Route path=\"/note/:noteId\" component={NotePageNav} />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n        {['/', '/folder/:folderId'].map(path => (\n          <Route exact key={path} path={path} component={NoteListNav} />\n        ))}\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        <Route path=\"/note/:noteId\" component={NotePageMain} />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" component={AddNote} />\n        {['/', '/folder/:folderId'].map(path =>\n          <Route exact key={path} path={path} component={NoteListMain} />\n        )}\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.handleAddFolder,\n      newFolder: this.state.newFolder,\n      updateNewFolderName: this.updateNewFolderName,\n      newNote: this.state.newNote,\n      handleAddNote: this.handleAddNote,\n      updateNewNoteData: this.updateNewNoteData,\n      updateBadSubmitData: this.updateBadSubmitData\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <NotefulErrors>\n            <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n            <header className=\"App__header\">\n              <h1>\n                <Link to=\"/\">Noteful</Link>{' '}\n                <FontAwesomeIcon icon=\"check-double\" />\n              </h1>\n            </header>\n            <main className=\"App__main\">{this.renderMainRoutes()}</main>\n          </NotefulErrors>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}