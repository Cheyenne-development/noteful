{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","NotefulErrors.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","parseInt","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","folder_id","countNotesForFolder","folder_name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","Authorization","API_KEY","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","name","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","note_name","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","newFolder","hasError","updateNewFolderName","target","value","body","JSON","stringify","newName","trim","_this2","NotefulForm_NotefulForm","onSubmit","htmlFor","touched","validateFolderName","aria-required","aria-label","required","defaultValue","onChange","updateFolderName","AddNote","addNewNote","Date","resJSON","handleAddNote","parseFolders","newNote","updateBadSubmitData","validateName","validateDescription","updateNewNoteData","NotefulErrors","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","App","setState","nameValue","contentValue","input","defineProperty","handleAddFolder","toConsumableArray","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","Route","path","component","exact","Provider","NotefulErrors_NotefulErrors","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.88d11733.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {},\r\n  })","export const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === parseInt(folderId))\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === parseInt(noteId))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folder_id === parseInt(folderId))\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folder_id === folderId).length","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.folder_name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.folder_name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}","export default {\r\n    API_ENDPOINT: 'https://nameless-journey-88638.herokuapp.com/'\r\n  }","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types'\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    onDeleteNote: () => { },\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/api/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n      })\n      .then(() => {       \n        this.context.deleteNote(noteId)\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/api/notes/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nNote.propTypes = {\n  onDeleteNote: PropTypes.func,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  modified: PropTypes.string.isRequired\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\nimport PropTypes from 'prop-types'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.note_name}\n                modified={note.modified}\n                onDeleteNote={this.onDeleteNote}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n\nNoteListMain.propTypes = {\n  match: PropTypes.object,\n  params: PropTypes.object\n}","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.note_name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}","import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class AddFolder extends Component {\r\n    static defaultProps = {\r\n        history: {\r\n          push: () => { }\r\n        },\r\n      }\r\n      static contextType = ApiContext;\r\n\r\n      handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (this.context.newFolder.hasError === true){\r\n        return this.context.updateNewFolderName()\r\n        } else {\r\n        const folder = {\r\n          folder_name: e.target['folder-name'].value\r\n        }\r\n        fetch(`${config.API_ENDPOINT}/api/folders`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify(folder),\r\n        })\r\n          .then(res => {\r\n            if (!res.ok)\r\n              return res.json().then(e => Promise.reject(e))\r\n            return res.json()\r\n          })\r\n          .then(folder => {\r\n            this.context.addFolder(folder)\r\n            this.props.history.push(`/folder/${folder.id}`)\r\n          })\r\n          .catch(error => {\r\n            console.error({ error })\r\n          })\r\n      }\r\n    }\r\n    \r\n\r\n  updateFolderName(e) {\r\n    const newName = e.target.value;\r\n      this.context.updateNewFolderName(newName);\r\n  }\r\n\r\n  validateFolderName() {\r\n    \r\n    if (this.context.newFolder.name.trim().length === 0) {\r\n      return 'Must be more than 0 characters.'\r\n    } else if ( this.context.newFolder.name.trim().length <= 3 ) {    \r\n      return 'Must be more than 3 characters.'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n        <section className='AddFolder'>\r\n        <h2>Create a folder</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='folder-name'>\r\n          Name:\r\n        {this.context.newFolder.touched && (\r\n          <p>{this.validateFolderName()}</p>\r\n          )}  \r\n        </label>\r\n        <input type='text' \r\n        id='new-folder'\r\n        name=\"folder-name\"\r\n        aria-required=\"true\"\r\n        aria-label=\"Name\"\r\n        required\r\n        defaultValue=\"\"\r\n        onChange={(e) => this.updateFolderName(e)}/>\r\n        <button type=\"submit\">Submit</button>\r\n        </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nAddFolder.propTypes = {\r\n  history: PropTypes.object\r\n}","import React from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\n\r\n\r\nexport default class AddNote extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => { }\r\n    },\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  addNewNote = note => {\r\n    note.modified = new Date(note.modified);\r\n\r\n    fetch(`${config.API_ENDPOINT}/api/notes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Authorization': `Bearer ${config.API_KEY}`\r\n      },\r\n      body: JSON.stringify(note),\r\n    })\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(resJSON => this.context.handleAddNote(resJSON))\r\n  }\r\n  parseFolders = () => {\r\n    return this.context.folders.map(folder => (\r\n      <option key={folder.id} name={folder.id} value={folder.id}>\r\n        {folder.folder_name}\r\n      </option>\r\n    ))\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault(e);\r\n    const newNote = {\r\n      note_name: e.target.name.value,\r\n      content: e.target.content.value,\r\n      folder_id: e.target.folder.value,\r\n      modified: new Date(),\r\n    }\r\n    if (e.target.name.value.length !== 0 && e.target.content.value.length !== 0) {\r\n\r\n      this.addNewNote(newNote)\r\n      this.props.history.push('/');\r\n\r\n    } else {\r\n      return this.context.updateBadSubmitData()\r\n    }\r\n\r\n   \r\n\r\n  }\r\n\r\n  validateName = () => {\r\n    \r\n    if (this.context.newNote.name.value === undefined || this.context.newNote.name.value.length === 0) {\r\n      return 'Name is required'\r\n    }\r\n  }\r\n\r\n  validateDescription = () => {\r\n    if (this.context.newNote.content.value === undefined || this.context.newNote.content.value.length === 0) {\r\n      return 'Description is required'\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <section className='AddNote'>\r\n        <h2>Create a note</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='note-name'>\r\n              Name\r\n            {this.context.newNote.name.touched && <p>{this.validateName()}</p>}\r\n            </label>\r\n            <input type='text' id='note-name' name='name'\r\n              aria-required=\"true\"\r\n              aria-label=\"Name\"\r\n              required\r\n              defaultValue=\"\"\r\n              onChange={e =>\r\n                this.context.updateNewNoteData(e.target.name, e.target.value)\r\n              }\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor=\"content\">\r\n              Description\r\n            {this.context.newNote.content.touched && (\r\n                <p>{this.validateDescription()}</p>\r\n              )}\r\n            </label>\r\n            <textarea id='note-content' name='content'\r\n              aria-required=\"true\"\r\n              aria-label=\"Description\"\r\n              defaultValue=\"\"\r\n              required\r\n              onChange={e =>\r\n                this.context.updateNewNoteData(e.target.name, e.target.value)\r\n              }\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor=\"folder-select\">Select a Folder</label>\r\n            <select\r\n              id=\"note-folder\"\r\n              name=\"folder\"\r\n              aria-required=\"true\"\r\n              aria-label=\"Select a folder\"\r\n            >\r\n              {this.parseFolders()}\r\n            </select>\r\n          </div>\r\n          <div className='buttons'>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotefulErrors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {hasError:true};\r\n\r\n  }\r\n  render() {\r\n    if (this.state.hasError){\r\n      return(\r\n        <div>\r\n          <h2>ERROR</h2>\r\n          <p>Something wrong here!...</p>\r\n        </div>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nNotefulErrors.propTypes = {\r\n  children: PropTypes.array\r\n}","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\nimport NotefulErrors from '../NotefulErrors'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n    newFolder: {\n      hasError: true,\n      touched: false,\n      name: '',\n    },\n    newNote: {\n      name: {\n        touched: false,\n        value: '',\n      },\n      folderId: {\n        touched: false,\n        value: '',\n      },\n      content: {\n        touched: false,\n        value: '',\n      },\n    },\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/api/notes`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${config.API_KEY}`\n        }\n      }),\n      fetch(`${config.API_ENDPOINT}/api/folders`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${config.API_KEY}`\n        }\n      }),\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json()])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  updateNewFolderName = name => {\n    if (name === undefined) {\n      this.setState({\n        newFolder: {\n          hasError: true,\n          touched: true,\n          name: \"\",\n        },\n      })\n    } else if (name.length < 4) {\n      this.setState({\n        newFolder: {\n          hasError: true,\n          touched: true,\n          name: name,\n        },\n      })\n    } else {\n      this.setState({\n        newFolder: {\n          hasError: false,\n          touched: true,\n          name: name,\n        },\n      })\n    }\n  }\n\n  updateBadSubmitData = () => {\n    const nameValue = this.state.newNote.name.value\n    const contentValue = this.state.newNote.content.value\n    this.setState({\n      ...this.state.newNote,\n      newNote: {\n        name: {\n          touched: true,\n          value: nameValue\n        },\n        content: {\n          touched: true,\n          value: contentValue\n        }\n      }\n\n\n    })\n\n  }\n\n  updateNewNoteData = (input, value) => {\n    this.setState({\n      newNote: {\n        ...this.state.newNote,\n        [input]: {\n          touched: true,\n          value: value,\n        },\n      },\n    })\n  }\n\n  handleAddFolder = newFolder => {\n    this.setState({\n      folders: [...this.state.folders, newFolder],\n      newFolder: {\n        hasError: true,\n        touched: false,\n        name: \"\",\n      }\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note],\n      newNote: {\n        name: {\n          touched: false,\n        },\n        content: {\n          touched: false,\n        }\n      }\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId),\n    })\n\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        <Route path=\"/api/notes/:noteId\" component={NotePageNav} />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n        {['/', '/folder/:folderId'].map(path => (\n          <Route exact key={path} path={path} component={NoteListNav} />\n        ))}\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        <Route path=\"/api/notes/:noteId\" component={NotePageMain} />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" component={AddNote} />\n        {['/', '/folder/:folderId'].map(path =>\n          <Route exact key={path} path={path} component={NoteListMain} />\n        )}\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.handleAddFolder,\n      newFolder: this.state.newFolder,\n      updateNewFolderName: this.updateNewFolderName,\n      newNote: this.state.newNote,\n      handleAddNote: this.handleAddNote,\n      updateNewNoteData: this.updateNewNoteData,\n      updateBadSubmitData: this.updateBadSubmitData\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <NotefulErrors>\n            <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n            <header className=\"App__header\">\n              <h1>\n                <Link to=\"/\">Noteful</Link>{' '}\n                <FontAwesomeIcon icon=\"check-double\" />\n              </h1>\n            </header>\n            <main className=\"App__main\">{this.renderMainRoutes()}</main>\n          </NotefulErrors>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}